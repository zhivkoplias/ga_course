res <- results(dds)
res
res <- results(dds, name="condition_Serum_vs_BH")
res <- results(dds, contrast=c("condition","Serum","BH"))
# Log fold change shrinkage for visualization and ranking
#biocLite("apeglm")
library(apeglm)
resultsNames(dds)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
resLFC
resOrdered <- res[order(res$log2FoldChange),]
summary(res)
sum(res$padj < 0.1, na.rm=TRUE)
res05 <- results(dds, alpha=0.05)
summary(res05)
sum(res05$padj < 0.05, na.rm=TRUE)
plotMA(res, ylim=c(-9,9))
plotMA(resLFC, ylim=c(-9,9), main='MA plot', alpha=0.1)
rld <- rlogTransformation(dds, blind=TRUE)
plotPCA(rld)
directory <- "/home/erik/sweden/courses/2nd_semester/Genome_Analysis/ga_course/htseq_counts_tnseq/htseq_counts/"
sampleFiles_Serum <- grep("Serum",list.files(directory),value=TRUE)
sampleCondition_Serum <- sub("(.*Serum).*","\\1",sampleFiles_Serum)
sampleTable_Serum <- data.frame(sampleName = sampleFiles_Serum,
fileName = sampleFiles_Serum,
condition = sampleCondition_Serum)
sampleFiles_Human <- grep("HeatInactivated",list.files(directory),value=TRUE)
sampleCondition_Human <- sub("(.*HeatInactivated).*","\\1",sampleFiles_Human)
sampleTable_Human <- data.frame(sampleName = sampleFiles_Human,
fileName = sampleFiles_Human,
condition = sampleCondition_Human)
sampleFiles_BH <- grep("BH",list.files(directory),value=TRUE)
sampleCondition_BH <- sub("(.*BH).*","\\1",sampleFiles_BH)
sampleTable_BH <- data.frame(sampleName = sampleFiles_BH,
fileName = sampleFiles_BH,
condition = sampleCondition_BH)
sampleCondition <- c(sampleCondition_Serum, sampleCondition_BH, sampleCondition_Human)
sampleTable_SH <- merge(sampleTable_BH, sampleTable_Serum, all=TRUE)
sampleTable <- merge(sampleTable_SH, sampleTable_Human, all=TRUE)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
keep <- rowSums(counts(ddsHTSeq)) >= 10
ddsHTSeq <- ddsHTSeq[keep,]
dds <- ddsHTSeq
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH","HeatInactivated") ]
dds <- DESeq(dds)
res <- results(dds)
res
res <- results(dds, name="condition_Serum_vs_BH")
res <- results(dds, contrast=c("condition","Serum","BH"))
# Log fold change shrinkage for visualization and ranking
#biocLite("apeglm")
library(apeglm)
resultsNames(dds)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
directory <- "/home/erik/sweden/courses/2nd_semester/Genome_Analysis/ga_course/htseq_counts_tnseq/htseq_counts/"
sampleFiles_Serum <- grep("Serum",list.files(directory),value=TRUE)
sampleCondition_Serum <- sub("(.*Serum).*","\\1",sampleFiles_Serum)
sampleTable_Serum <- data.frame(sampleName = sampleFiles_Serum,
fileName = sampleFiles_Serum,
condition = sampleCondition_Serum)
sampleFiles_Human <- grep("HeatInactivated",list.files(directory),value=TRUE)
sampleCondition_Human <- sub("(.*HeatInactivated).*","\\1",sampleFiles_Human)
sampleTable_Human <- data.frame(sampleName = sampleFiles_Human,
fileName = sampleFiles_Human,
condition = sampleCondition_Human)
sampleFiles_BH <- grep("BH",list.files(directory),value=TRUE)
sampleCondition_BH <- sub("(.*BH).*","\\1",sampleFiles_BH)
sampleTable_BH <- data.frame(sampleName = sampleFiles_BH,
fileName = sampleFiles_BH,
condition = sampleCondition_BH)
sampleCondition <- c(sampleCondition_Serum, sampleCondition_BH, sampleCondition_Human)
sampleTable_SH <- merge(sampleTable_BH, sampleTable_Serum, all=TRUE)
sampleTable <- merge(sampleTable_SH, sampleTable_Human, all=TRUE)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
keep <- rowSums(counts(ddsHTSeq)) >= 10
ddsHTSeq <- ddsHTSeq[keep,]
dds <- ddsHTSeq
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH","HeatInactivated") ]
dds <- DESeq(dds)
res <- results(dds)
res
res <- results(dds, name="condition_Serum_vs_BH")
res <- results(dds, contrast=c("condition","Serum","BH"))
# Log fold change shrinkage for visualization and ranking
#biocLite("apeglm")
library(apeglm)
resultsNames(dds)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
resLFC
resOrdered <- res[order(res$log2FoldChange),]
summary(res)
sum(res$padj < 0.1, na.rm=TRUE)
res05 <- results(dds, alpha=0.05)
summary(res05)
sum(res05$padj < 0.05, na.rm=TRUE)
plotMA(res, ylim=c(-9,9))
plotMA(resLFC, ylim=c(-9,9), main='MA plot', alpha=0.1)
rld <- rlogTransformation(dds, blind=TRUE)
plotPCA(rld)
directory <- "/home/erik/sweden/courses/2nd_semester/Genome_Analysis/ga_course/htseq_counts_tnseq/htseq_counts/"
sampleFiles_Serum <- grep("Serum",list.files(directory),value=TRUE)
sampleCondition_Serum <- sub("(.*Serum).*","\\1",sampleFiles_Serum)
sampleTable_Serum <- data.frame(sampleName = sampleFiles_Serum,
fileName = sampleFiles_Serum,
condition = sampleCondition_Serum)
sampleFiles_BH <- grep("BH",list.files(directory),value=TRUE)
sampleCondition_BH <- sub("(.*BH).*","\\1",sampleFiles_BH)
sampleTable_BH <- data.frame(sampleName = sampleFiles_BH,
fileName = sampleFiles_BH,
condition = sampleCondition_BH)
sampleCondition <- c(sampleCondition_Serum, sampleCondition_BH)
sampleTable <- merge(sampleTable_BH, sampleTable_Serum, all=TRUE)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
keep <- rowSums(counts(ddsHTSeq)) >= 10
ddsHTSeq <- ddsHTSeq[keep,]
dds <- ddsHTSeq
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH","HeatInactivated") ]
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH") ]
dds <- DESeq(dds)
res <- results(dds)
res
res <- results(dds, name="condition_Serum_vs_BH")
res <- results(dds, contrast=c("condition","Serum","BH"))
# Log fold change shrinkage for visualization and ranking
#biocLite("apeglm")
library(apeglm)
resultsNames(dds)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
resLFC
resOrdered <- res[order(res$log2FoldChange),]
summary(res)
sum(res$padj < 0.1, na.rm=TRUE)
res05 <- results(dds, alpha=0.05)
summary(res05)
sum(res05$padj < 0.05, na.rm=TRUE)
plotMA(res, ylim=c(-9,9))
plotMA(resLFC, ylim=c(-9,9), main='MA plot', alpha=0.1)
# Create the report from the DESeq2 package,
DESeq2Report(dds = dds, intgroup = "growth_medium")
#biocLite("DESeq2")
library(DESeq2)
# Create the report from the DESeq2 package,
DESeq2Report(dds = dds, intgroup = "growth_medium")
# Since expression data is
rld <- rlog(dds)
resultsdds <- results(dds)
change_filter <- change_filter <- which(
abs(resultsdds$log2FoldChange > 2) |
abs(resultsdds$log2FoldChange < 0.5)
)
topVarGenes <- head(order(-rowVars(assay(rld))),20)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"growth_medium"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum")
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Growth Medium"
View(rld)
df <- as.data.frame(colData(rld)[,"growth_medium"])
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"growth_medium"])
df <- as.data.frame(colData(rld)[,"Condition"])
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Growth Medium"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
install.packages("pheatmap")
#install.packages("pheatmap")
library(pheatmap)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),50)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Growth Medium"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),40)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Growth Medium"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),30)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Growth Medium"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),20)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Growth Medium"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
View(mat)
df
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
#install.packages("pheatmap")
library(pheatmap)
df <- as.data.frame(colData(rld)[,"condition"])
df
pheatmap(mat, annotation_col=df)
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Growth Medium"
pheatmap(mat, annotation_col=df)
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
#install.packages("pheatmap")
library(pheatmap)
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
#install.packages("pheatmap")
library(pheatmap)
pheatmap(mat, annotation_col=df)
colnames(df) <- "Condition"
View(df)
mat <- mat - rowMeans(mat)
pheatmap(mat, annotation_col=df)
mat
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
plotMA(resLFC, ylim=c(-9,9), main='MA plot', alpha=0.1)
plotMA(resLFC, ylim=c(-10,10), main='MA plot', alpha=0.1)
plotMA(resultsddsLFC, ylim=c(-10,10), main='MA plot', alpha=0.1)
# Since expression data is
rld <- rlog(dds)
resultsdds <- results(dds)
plotMA(resultsddsLFC, ylim=c(-10,10), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-10,10), main='MA plot', alpha=0.1)
resultsdds <- results(dds)
resultsdds
resLFC <- lfcShrink(resultsdds, coef="condition_Serum_vs_BH", type="apeglm")
resultsdds <- results(dds)
resLFC <- lfcShrink(resultsdds, coef="condition_Serum_vs_BH", type="apeglm")
# Since expression data is
rld <- rlog(dds)
resultsdds <- results(dds)
resLFC <- lfcShrink(resultsdds, coef="condition_Serum_vs_BH", type="apeglm")
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH") ]
dds <- DESeq(dds)
dds <- rlog(dds)
res <- results(dds)
dds <- DESeq(dds)
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH") ]
dds <- DESeq(dds)
dds <- ddsHTSeq
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH") ]
dds <- DESeq(dds)
res <- results(dds)
res
res <- rlog(res)
res <- results(dds, name="condition_Serum_vs_BH")
res <- results(dds, contrast=c("condition","Serum","BH"))
# Log fold change shrinkage for visualization and ranking
#biocLite("apeglm")
library(apeglm)
resultsNames(dds)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
resLFC
resOrdered <- res[order(res$log2FoldChange),]
resLFC
resLFC <- rlog(resFLC)
resLFC <- rlog(resLFC)
# Since expression data is
rld <- rlog(dds)
resultsdds <- results(dds)
plotMA(resultsdds, ylim=c(-10,10), main='MA plot', alpha=0.1)
resultsdds <- log(resultsdds)
View(resultsdds)
resultsdds
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange)
resultsdds$log2FoldChange <- log(resultsdds$log2FoldChange)
plotMA(resultsdds, ylim=c(-10,10), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-3,3), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-5,5), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-6,6), main='MA plot', alpha=0.1)
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange)
plotMA(resultsdds, ylim=c(-6,6), main='MA plot', alpha=0.1)
resultsdds$log2FoldChange <- log(resultsdds$log2FoldChange)
resultsdds$log2FoldChange
# Since expression data is
rld <- rlog(dds)
resultsdds <- results(dds)
plotMA(resultsdds, ylim=c(-6,6), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-20,20), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-50,50), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-40,40), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-30,30), main='MA plot', alpha=0.1)
change_filter <- change_filter <- which(
abs(resultsdds$log2FoldChange > 2) |
abs(resultsdds$log2FoldChange < 0.5)
)
topVarGenes <- head(order(-rowVars(assay(rld))),200)
topVarGenes <- head(order(-rowVars(assay(rld))),20)
topVarGenes <- head(order(-rowVars(assay(rld))),200)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
plotMA(resultsdds, ylim=c(-30,30), main='MA plot', alpha=0.1)
plotMA(resultsdds, ylim=c(-30,30), main='MA plot', alpha=0.01)
plotMA(resultsdds, ylim=c(-30,30), main='MA plot', alpha=0.0001)
plotMA(resultsdds, ylim=c(-30,30), main='MA plot', alpha=0.05)
# DE analysis
dds <- dds[, dds$condition %in% c("Serum","BH") ]
dds <- DESeq(dds)
res <- results(dds)
res
res <- results(dds, name="condition_Serum_vs_BH")
res <- results(dds, contrast=c("condition","Serum","BH"))
# Log fold change shrinkage for visualization and ranking
#biocLite("apeglm")
library(apeglm)
resultsNames(dds)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
resLFC
resOrdered <- res[order(res$log2FoldChange),]
summary(res)
sum(res$padj < 0.05, na.rm=TRUE)
sum(res$padj < 0.1, na.rm=TRUE)
sum(res$padj < 0.05, na.rm=TRUE)
sum(res$padj < 0.1, na.rm=TRUE)
res05 <- results(dds, alpha=0.05)
summary(res05)
sum(res05$padj < 0.05, na.rm=TRUE)
sum(res05$padj < 0.1, na.rm=TRUE)
res05
res05[res05$padj<0.05]
aaaa <- res05[res05$padj<0.05]
aaaa <- res05[,res05$padj<0.05]
# Since expression data is
rld <- rlog(dds)
resultsdds <- results(dds)
resultsdds$log2FoldChange <- log(resultsdds$log2FoldChange)
plotMA(resultsdds, ylim=c(-3,3), main='MA plot', alpha=0.05)
plotMA(resultsdds, ylim=c(-5,5), main='MA plot', alpha=0.05)
# Since expression data is
rld <- rlog(dds)
resultsdds <- results(dds)
resultsdds$log2FoldChange <- ln(resultsdds$log2FoldChange)
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange)
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange)+0.00001
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange+0.00001)
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange+1)
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange+90)
resultsdds$log2FoldChange <- rlog(resultsdds$log2FoldChange+90000)
plotMA(resultsdds, ylim=c(-5,5), main='MA plot', alpha=0.05)
plotMA(resLFC, ylim=c(-10,10), main='MA plot', alpha=0.1)
resLFC
resLFC_06 <- resLFC[resLFC$padj<0.05]
resLFC_06 <- resLFC[,resLFC$padj<0.05]
change_filter <- change_filter <- which(
abs(resultsdds$log2FoldChange > 2) |
abs(resultsdds$log2FoldChange < 0.5)
)
change_filter <- which(abs(resLFC$padj<0.05))
change_filter <- change_filter <- which(
abs(resLFC$padj<0.05) |
abs(resLFC$padj<0.05)
)
topVarGenes <- resLFC[(resLFC %in% change_filter)]
topVarGenes <- head(order(-rowVars(assay(rld))),200)
topVarGenes <- head(order(-rowVars(assay(resLFC))),200)
topVarGenes <- head(order(-rowVars(assay(resLFC))),20)
topVarGenes <- head(order(-rowVars(assay(dds))),20)
topVarGenes <- resLFC[(resLFC %in% change_filter)]
topVarGenes <- resLFC[(topVarGenes %in% change_filter)]
topVarGenes <- dds[(topVarGenes %in% change_filter)]
topVarGenes
View(topVarGenes)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
dds <- DESeq(dds)
res <- results(dds)
res
res <- results(dds, name="condition_Serum_vs_BH")
res <- results(dds, contrast=c("condition","Serum","BH"))
resultsNames(dds)
resLFC <- lfcShrink(dds, coef="condition_Serum_vs_BH", type="apeglm")
resLFC
resOrdered <- res[order(res$log2FoldChange),]
summary(res)
View(resOrdered)
res
resLFC
resOrdered <- resLFC[order(resLFC$padj),]
resOrdered
sum(res05$padj < 0.1, na.rm=TRUE)
resOrdered <- resLFC[order(resLFC$padj),]
save_it <- as.data.frame(resOrdered)
View(save_it)
View(mat)
topVarGenes <- head(order(-rowVars(assay(rld))),30)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),30)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
change_filter <- change_filter <- which(
abs(resultsdds$log2FoldChange > 2) |
abs(resultsdds$log2FoldChange < 0.5)
)
topVarGenes <- head(order(-rowVars(assay(rld))),30)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
#install.packages("pheatmap")
library(pheatmap)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),300)
change_filter <- change_filter <- which(
abs(resultsdds$log2FoldChange > 2) |
abs(resultsdds$log2FoldChange < 0.5)
)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
change_filter <- change_filter <- which(
abs(resultsdds$padj < 0.05) |
abs(resultsdds$log2FoldChange < 0.05)
)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
topVarGenes <- head(order(-rowVars(assay(rld))),50)
change_filter <- change_filter <- which(
abs(resultsdds$log2FoldChange > 2) |
abs(resultsdds$log2FoldChange < 0.5)
)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
change_filter <- change_filter <- which(
abs(resultsdds$padj < 0.05) |
abs(resultsdds$log2FoldChange < 0.05)
)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),500)
change_filter <- change_filter <- which(
abs(resultsdds$log2FoldChange > 2) |
abs(resultsdds$log2FoldChange < 0.5)
)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
change_filter <- change_filter <- which(
abs(resultsdds$padj < 0.05) |
abs(resultsdds$log2FoldChange < 0.05)
)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
topVarGenes <- head(order(-rowVars(assay(rld))),50)
topVarGenes <- topVarGenes[(topVarGenes %in% change_filter)]
mat <- assay(rld)[ topVarGenes, ]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(rld)[,"condition"])
colnames(mat) <- c("BH1","BH2","BH3","Serum1","Serum2","Serum3","Serum4")
colnames(df) <- "Condition"
rownames(df) <- colnames(mat)
pheatmap(mat, annotation_col=df)
